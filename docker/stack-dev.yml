version: "3.9"

services:
  gjsx_xdesk:
    image: bresnow/gjsx-dev:${VERSION:-latest}
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-net
        - traefik.constraint-label=traefik-net
        - traefik.http.routers.proxy-$ID.rule=Host(`${DOMAIN:-cnxt.dev}`) # add dot after subdomain if applicable
        - traefik.http.routers.proxy-$ID.entrypoints=http,https
        - traefik.http.routers.proxy-$ID.service=proxy-$ID
        - traefik.http.routers.proxy-$ID.tls=true
        - traefik.http.routers.proxy-$ID.tls.certresolver=${TLS:-letsencrypt}
        - traefik.http.services.proxy-$ID.loadbalancer.server.port=8087
        - traefik.http.routers.gjsx-$ID.rule=Host(`${INTERFACE}.${DOMAIN:-cnxt.dev}`) # add dot after subdomain if applicable
        - traefik.http.routers.gjsx-$ID.entrypoints=http,https
        - traefik.http.routers.gjsx-$ID.service=gjsx-$ID
        - traefik.http.routers.gjsx-$ID.tls=true
        - traefik.http.routers.gjsx-$ID.tls.certresolver=${TLS:-letsencrypt}
        - traefik.http.services.gjsx-$ID.loadbalancer.server.port=8086
    networks:
      - traefik-net
      - edge
      - socket-proxy
    volumes:
      - project:/gjsx
      - logs:/gjsx/docker/log
    environment:
      C99_API_KEY: ${C99_API_KEY}

volumes:
  project:
    driver: local-persist
    driver_opts:
      mountpoint: ${project_mountpoint:-/home/administrator/app.xdesk}
  logs:
    driver: local-persist
    driver_opts:
      mountpoint: ${project_mountpoint:-/home/administrator/app.xdesk/docker/log/$ID


networks:
  traefik-net:
    external: true
  edge:
    external: true
  socket-proxy:
    external: true
