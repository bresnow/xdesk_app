version: "3.9"

services:
  gjsx_xdesk:
    image: bresnow/gjsx-dev:${VERSION:-latest}
    deploy:

      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-net
        - traefik.constraint-label=traefik-net
        - traefik.http.routers.proxy-${ID:-xdesk_dev}.rule=Host(`${DOMAIN:-cnxt.dev}`) 
        - traefik.http.routers.proxy-${ID:-xdesk_dev}.entrypoints=http,https
        - traefik.http.routers.proxy-${ID:-xdesk_dev}.service=proxy-${ID:-xdesk_dev}
        - traefik.http.routers.proxy-${ID:-xdesk_dev}.tls=true
        - traefik.http.routers.proxy-${ID:-xdesk_dev}.tls.certresolver=${TLS:-letsencrypt}
        - traefik.http.services.proxy-${ID:-xdesk_dev}.loadbalancer.server.port=8087
        - traefik.http.routers.gjsx-${ID:-xdesk_dev}.rule=Host(`${INTERFACE_DOMAIN:-namespace.cnxt.dev}`) 
        - traefik.http.routers.gjsx-${ID:-xdesk_dev}.entrypoints=http,https
        - traefik.http.routers.gjsx-${ID:-xdesk_dev}.service=gjsx-${ID:-xdesk_dev}
        - traefik.http.routers.gjsx-${ID:-xdesk_dev}.tls=true
        - traefik.http.routers.gjsx-${ID:-xdesk_dev}.tls.certresolver=${TLS:-letsencrypt}
        - traefik.http.services.gjsx-${ID:-xdesk_dev}.loadbalancer.server.port=8086
    networks:
      - traefik-net
      - socket-proxy
    volumes:
      - project:/gjsx

    environment:
      C99_API_KEY: ${C99_API_KEY}

volumes:
  project:
    driver: local-persist
    driver_opts:
      mountpoint: ${project_mountpoint:-/home/administrator/app.xdesk}



networks:
  traefik-net:
    external: true

  socket-proxy:
    external: true
